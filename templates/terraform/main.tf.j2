terraform {
  required_providers { aws = { source = "hashicorp/aws", version = ">= 5.0" } }
}

provider "aws" { region = "{{ plan.cloud.region }}" }

resource "aws_security_group" "app_sg" {
  name        = "autodeploy-sg"
  description = "Allow app ports"
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  {% for p in plan.net.open_ports %}
  ingress {
    from_port   = {{ p }}
    to_port     = {{ p }}
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  {% endfor %}
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

data "aws_ami" "ubuntu" {
  most_recent = true
  owners      = ["099720109477"] # Canonical
  filter { name = "name" values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"] }
}

resource "aws_instance" "app" {
  ami                    = data.aws_ami.ubuntu.id
  instance_type          = "{{ plan.compute.instance_type }}"
  vpc_security_group_ids = [aws_security_group.app_sg.id]
  key_name               = {{ json.dumps(plan.compute.key_name) }}
  user_data              = var.user_data
  tags = { Name = "autodeploy-{{ plan.cloud.region }}" }
}
